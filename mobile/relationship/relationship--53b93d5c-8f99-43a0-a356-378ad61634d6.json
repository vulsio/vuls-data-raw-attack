{
	"type": "relationship",
	"id": "relationship--53b93d5c-8f99-43a0-a356-378ad61634d6",
	"created": "2022-03-30T14:26:51.876Z",
	"created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
	"description": "Monitor network traffic for WMI connections for potential use to remotely edit configuration, start services, or query files. When remote WMI requests are over RPC it connects to a DCOM interface within the RPC group <code>netsvcs</code>. To detect this activity, a sensor is needed at the network level that can decode RPC traffic or on the host where the communication can be detected more natively, such as Event Tracing for Windows. Using wireshark/tshark decoders, the WMI interfaces can be extracted so that WMI activity over RPC can be detected. Although the description details how to detect remote WMI precisely, a decent estimate has been to look for the string RPCSS within the initial RPC connection on 135/tcp. It returns a superset of this activity, and will trigger on all DCOM-related services running within RPC, which is likely to also be activity that should be detected between hosts. More about RPCSS at : rpcss_dcom_interfaces.html\n\nLook for instances of the WMI querying in network traffic, and find the cases where a process is launched immediately after a connection is seen. This essentially merges the request to start a remote process via WMI with the process execution. If other processes are spawned from wmiprvse.exe in this time frame, it is possible for race conditions to occur, and the wrong process may be merged. If this is the case, it may be useful to look deeper into the network traffic to see if the desired command can be extracted.\n\nAfter the WMI connection has been initialized, a process can be remotely launched using the command: <code>wmic /node:\"<hostname>\" process call create \"<command line>\"</code>, which is detected in the third Detection Pseudocode. \n\nThis leaves artifacts at both a network (RPC) and process (command line) level. When <code>wmic.exe</code> (or the schtasks API) is used to remotely create processes, Windows uses RPC (135/tcp) to communicate with the the remote machine.\n\nAfter RPC authenticates, the RPC endpoint mapper opens a high port connection, through which the schtasks Remote Procedure Call is actually implemented. With the right packet decoders, or by looking for certain byte streams in raw data, these functions can be identified.\n\nWhen the command line is executed, it has the parent process of <code>C:\\windows\\system32\\wbem\\WmiPrvSE.exe</code>. This analytic looks for these two events happening in sequence, so that the network connection and target process are output.\n\nCertain strings can be identifiers of the WMI by looking up the interface UUID for <code>IRemUnknown2</code> in different formats\n- UUID <code>00000143-0000-0000-c000-000000000046</code> (decoded)\n- Hex <code>43 01 00 00 00 00 00 00 c0 00 00 00 00 00 00 46</code> (raw)\n- ASCII <code>CF</code> (printable text only)\n\nThis identifier is present three times during the RPC request phase. Any sensor that has access to the byte code as raw, decoded, or ASCII could implement this analytic. The transfer syntax is\n- UUID <code>8a885d04-1ceb-11c9-9fe8-08002b104860</code> (decoded)\n- Hex <code>04 5d 88 8a eb 1c c9 11 9f e8 08 00 2b 10 48 60</code> (raw)\n- ASCII <code>`]+H``</code> (printable text only)\n\nThus, a great ASCII based signature is\n- <code>*CF*]+H*CF*CF*host*\"</code>\n\nNote: To detect WMI over RPC (using DCOM), a sensor needs to exist that has the insight into individual connections and can actually decode and make sense of RPC traffic. Specifically, WMI can be detected by looking at RPC traffic where the target interface matches that of WMI, which is IRemUnknown2. Look for instances of the WMI querying in network traffic, and find the cases where a process is launched immediately after a connection is seen. This essentially merges the request to start a remote process via WMI with the process execution. If other processes are spawned from wmiprvse.exe in this time frame, it is possible for race conditions to occur, and the wrong process may be merged. If this is the case, it may be useful to look deeper into the network traffic to see if the desired command can be extracted.\n\nAnalytic 1 - Remote WMI over RPC\n\n<code>source=\"*Zeek:RPC\" dest_port=\"135\" protocol_rpc_interface=\"IRemUnknown2\"</code>",
	"modified": "2024-03-27T18:18:28.483Z",
	"object_marking_refs": [
		"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
	],
	"relationship_type": "detects",
	"revoked": false,
	"source_ref": "x-mitre-data-component--181a9f8c-c780-4f1f-91a8-edb770e904ba",
	"spec_version": "",
	"target_ref": "attack-pattern--01a5a209-b94c-450b-b7f9-946497d91055",
	"x_mitre_attack_spec_version": "3.2.0",
	"x_mitre_deprecated": false,
	"x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
	"x_mitre_version": "0.1"
}
