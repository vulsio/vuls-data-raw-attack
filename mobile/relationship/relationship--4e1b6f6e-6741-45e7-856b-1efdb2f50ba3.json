{
	"type": "relationship",
	"id": "relationship--4e1b6f6e-6741-45e7-856b-1efdb2f50ba3",
	"created": "2024-03-07T19:40:55.94Z",
	"created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
	"description": "Where possible, enforce binary and application integrity with digital signature verification to prevent untrusted code from executing. For example, do not use `shell.openExternal` with untrusted content.\n\nWhere possible, set `nodeIntegration` to false, which disables access to the Node.js function.(Citation: Electron Security 3) By disabling access to the Node.js function, this may limit the ability to execute malicious commands by injecting JavaScript code.\n\nDo not disable `webSecurity`, which may allow for users of the application to invoke malicious content from online sources.",
	"external_references": [
		{
			"description": "CertiK. (2020, June 30). Vulnerability in Electron-based Application: Unintentionally Giving Malicious Code Room to Run. Retrieved March 7, 2024.",
			"source_name": "Electron Security 3",
			"url": "https://medium.com/certik/vulnerability-in-electron-based-application-unintentionally-giving-malicious-code-room-to-run-e2e1447d01b8"
		}
	],
	"modified": "2024-04-15T23:04:00.591Z",
	"object_marking_refs": [
		"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
	],
	"relationship_type": "mitigates",
	"revoked": false,
	"source_ref": "course-of-action--47e0e9fe-96ce-4f65-8bb1-8be1feacb5db",
	"spec_version": "",
	"target_ref": "attack-pattern--561ae9aa-c28a-4144-9eec-e7027a14c8c3",
	"x_mitre_attack_spec_version": "3.2.0",
	"x_mitre_deprecated": false,
	"x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
	"x_mitre_version": "0.1"
}
