{
  "type": "relationship",
  "id": "relationship--c2cd39bc-7955-42d3-9e67-b1315b098c07",
  "created": "2023-08-11T15:26:41.869Z",
  "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
  "description": "Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Network Analysis frameworks such as Zeek can be used to capture, decode, and alert on RPC network flows.\n\nWhen a Windows Remote Management connection is opened, the client sends HTTP requests to port 5985 for HTTP or 5986 for HTTPS on the target host. Each HTTP(S) request to the URI “/wsman” is called, and other information is set in the headers. Depending on the operation, the HTTP method may vary (i.e., GET, POST, etc.). This analytic would detect Remote PowerShell, as well as other communications that rely on WinRM. Additionally, it outputs the executable on the client host, the connection information, and the hostname of the target host. Look for network connections to port 5985 and 5986. To really decipher what is going on, these outputs should be fed into something that can do packet analysis.\n\nNote: Traffic to the RPC Endpoint Mapper will always have the destination port of 135. Assuming success, RPC traffic will continue to the endpoint. The endpoint and the client both bind to dynamically assigned ports (on Windows, this is typically greater than 49152). The traffic between the client and endpoint can be detected by looking at traffic to 135 followed by traffic where the source and destination ports are at least 49152.\n\n<h4>Analytic 1 - RPC Activity </h4>\n<code>rpc_mapper = filter flows where (dest_port == 135)\nrpc_endpoint = filter flows where (dest_port >= 49152 and src_port >= 49152)\nrpc = join rpc_mapper, rpc_endpoint where (\n (rpc_mapper.time < rpc_endpoint.time < rpc_mapper.time + 2 seconds) AND\n (rpc_mapper.src_ip == rpc_endpoint.src_ip AND rpc_mapper.dest_ip == rpc_endpoint.dest_ip)) </code>\n\n<h4>Analytic 2 - WinRM </h4>\n<code>winrm = filter flow where (dest_port == 5985)\nwinrm_s = filter flow where (dest_port == 5986)</code>",
  "modified": "2023-08-11T15:26:41.869Z",
  "object_marking_refs": [
    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
  ],
  "relationship_type": "detects",
  "revoked": false,
  "source_ref": "x-mitre-data-component--a7f22107-02e5-4982-9067-6625d4a1765a",
  "spec_version": "",
  "target_ref": "attack-pattern--60d0c01d-e2bf-49dd-a453-f8a9c9fa6f65",
  "x_mitre_attack_spec_version": "3.1.0",
  "x_mitre_deprecated": false,
  "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
  "x_mitre_version": "0.1"
}
