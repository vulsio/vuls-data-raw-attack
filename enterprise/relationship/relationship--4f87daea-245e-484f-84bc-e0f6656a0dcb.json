{
  "type": "relationship",
  "id": "relationship--4f87daea-245e-484f-84bc-e0f6656a0dcb",
  "created": "2022-03-30T14:26:51.832Z",
  "created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
  "description": "Monitor newly executed processes that may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features.\n\nAn adversary can use accessibility features (Ease of Access), such as StickyKeys or Utilman, to launch a command shell from the logon screen and gain SYSTEM access. Since an adversary does not have physical access to the machine, this technique must be run within Remote Desktop. To prevent an adversary from getting to the login screen without first authenticating, Network-Level Authentication (NLA) must be enabled. If a debugger is set up for one of the accessibility features, then it will intercept the process launch of the feature and instead execute a new command line. This analytic looks for instances of cmd.exe or powershell.exe launched directly from the logon process, winlogon.exe. \n\nSeveral accessibility programs can be run using the Ease of Access center\n\n- sethc.exe handles StickyKeys\n- utilman.exe is the Ease of Access menu\n- osk.exe runs the On-Screen Keyboard\n- narrator.exe reads screen text over audio\n- magnify.exe magnifies the view of the screen near the cursor\n\nOne simple way to implement this technique is to note that in a default Windows configuration there are no spaces in the path to the system32 folder. If the accessibility programs are ever run with a Debugger set, then Windows will launch the Debugger process and append the command line to the accessibility program. As a result, a space is inserted in the command line before the path. Looking for any instances of a space in the command line before the name of an accessibility program will help identify when Debuggers are set.\n\nThe Windows Registry location HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options allows for parameters to be set for applications during execution. One feature used by malicious actors is the “Debugger” option. When a key has this value enabled, a Debugging command line can be specified. Windows will launch the Debugging command line, and pass the original command line in as an argument. Adversaries can set a Debugger for Accessibility Applications. The analytic looks for the original command line as an argument to the Debugger. When the strings “sethc.exe”, “utilman.exe”, “osk.exe”, “narrator.exe”, and “Magnify.exe” are detected in the arguments, but not as the main executable, it is very likely that a Debugger is set.\n\nNote: Event IDs are for Sysmon (Event ID 1 - process create) and Windows Security Log (Event ID 4688 - a new process has been created). The Analytic example looks for any creation of common accessibility processes such as sethc.exe but does no other filtering, which may result in false positives. Therefore, we recommend tuning any such analytics by including additional logic (e.g., testing the name of the parent process) that helps reduce false positives.\n\nAnalytic 2 could depend on the possibility of the known strings used as arguments for other applications used in the day-to-day environment. Although the chance of the string “sethc.exe” being used as an argument for another application is unlikely, it still is a possibility.\n\n<h4> Analytic 1 : Command Launched from Winlogon </h4>\n<code> processes = filter process where ((event_id == \"1\" OR event_id=\"4688\") AND (parent_exe == \"winlogon.exe\" and exe == \"cmd.exe\") AND command_line=\"*(sethc.exe OR utilman.exe OR osk.exe OR narrator.exe OR magnify.exe)*\"</code>\n\n<h4> Analytic 2 : Debuggers for Accessibility Applications </h4>\n<code> debuggers = filter process where (command_line match \"$.* .*(sethcutilmanosknarratormagnify)\\.exe\")</code>",
  "modified": "2023-08-23T22:05:26.653Z",
  "object_marking_refs": [
    "marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
  ],
  "relationship_type": "detects",
  "revoked": false,
  "source_ref": "x-mitre-data-component--3d20385b-24ef-40e1-9f56-f39750379077",
  "spec_version": "",
  "target_ref": "attack-pattern--70e52b04-2a0c-4cea-9d18-7149f1df9dc5",
  "x_mitre_attack_spec_version": "3.1.0",
  "x_mitre_deprecated": false,
  "x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
  "x_mitre_version": "0.1"
}
