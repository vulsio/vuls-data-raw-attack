{
	"type": "relationship",
	"id": "relationship--5a683179-f1fc-4113-b157-2c0a03f82083",
	"created": "2022-03-30T14:26:51.854Z",
	"created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
	"description": "Monitor and investigate attempts to modify ACLs and file/directory ownership. Consider enabling file/directory permission change auditing on folders containing key binary/configuration files.\n\nAdversaries sometimes modify object access rights at the operating system level. There are varying motivations behind this action - they may not want some files/objects to be changed on systems for persistence reasons and therefore provide admin only rights; also, they may want files to be accessible with lower levels of permissions.\n\nWindows environment logs can be noisy, so we take the following into consideration:\n\n- We need to exclude events generated by the local system (subject security ID “NT AUTHORITY\\SYSTEM”) and focus on actual user events.\n- When a permission modification is made for a folder, a new event log is generated for each subfolder and file under that folder. It is advised to group logs based on handle ID or user ID.\n- The Windows security log (event ID 4670) also includes information about the process that modifies the file permissions. It is advised to focus on uncommon process names, and it is also uncommon for real-users to perform this task without a GUI.\n- Pseudocode Event ID is for Windows Security Log (Event ID 4670 - Permissions on an object were changed). \n- Windows Event ID 4719 (An Attempt Was Made to Access An Object) can also be used to alert on changes to Active Directory audit policy for a system.\n\nLinux environment logs can be more noisy than the Windows-specific implementation, although Linux does not generate logs for system triggered activities like in Windows. In addition, it may be necessary to whitelist cron jobs that regularly run and execute chmod.\n\n<h4> Analytic 1 : Access Permission Modification for Windows </h4>\n<code> file_dacl_events = filter log_events where (\nevent_id == \"4670\" AND\nobject_type == \"File\" AND\nsubject_security_id != \"NT AUTHORITY\\SYSTEM\") </code>\n\n<h4>Analytic 2 - Access Permission Modification for Linux </h4>\n<code>chmod_processes = filter processes where command_line == \"chmod *\"</code>",
	"modified": "2023-08-14T17:54:09.739Z",
	"object_marking_refs": [
		"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
	],
	"relationship_type": "detects",
	"revoked": false,
	"source_ref": "x-mitre-data-component--639e87f3-acb6-448a-9645-258f20da4bc5",
	"spec_version": "",
	"target_ref": "attack-pattern--09b130a2-a77e-4af0-a361-f46f9aad1345",
	"x_mitre_attack_spec_version": "3.1.0",
	"x_mitre_deprecated": false,
	"x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
	"x_mitre_version": "0.1"
}
