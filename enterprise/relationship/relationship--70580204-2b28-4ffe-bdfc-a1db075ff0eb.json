{
	"type": "relationship",
	"id": "relationship--70580204-2b28-4ffe-bdfc-a1db075ff0eb",
	"created": "2022-04-20T13:02:07.112Z",
	"created_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
	"description": "Monitor for unexpected deletion of Windows event logs (via native binaries) and may also generate an alterable event (Event ID 1102: \"The audit log was cleared\"). When an eventlog is cleared, a new event is created that alerts that the eventlog was cleared. For Security logs, its event code 1100 and 1102. For System logs, it is event code 104.\n\nIt is unlikely that event log data would be cleared during normal operations, and it is likely that malicious attackers may try to cover their tracks by clearing an event log. When an event log gets cleared, it is suspicious. \n\n1. This is often done using wevtutil, a legitimate tool provided by Microsoft. This action interferes with event collection and notification, and may lead to a security event going undetected, thereby potentially leading to further compromise of the network. \n\n2. Alerting when a Clear Event Log is generated could point to this intruder technique. Centrally collecting events has the added benefit of making it much harder for attackers to cover their tracks. Event Forwarding permits sources to forward multiple copies of a collected event to multiple collectors, thus enabling redundant event collection. Using a redundant event collection model can minimize the single point of failure risk. \n\n3. Attackers may set the option of the sources of events with <code>Limit-EventLog -LogName Security -OverflowAction DoNotOverwrite</code> to not delete old Evenlog when the .evtx is full. By default the Security Log size is configured with the minimum value of 20 480KB (~23 000 EventLog). So if this option is enabled, all the new EventLogs will be automatically deleted. We can detect this behavior with the Security EventLog 1104. \n\n4. Attackers may delete .evtx with <code>del C:\\Windows\\System32\\winevt\\logs\\Security.evtx</code> or <code>Remove-Item C:\\Windows\\System32\\winevt\\logs\\Security.evtx</code> after having disabled and stopped the Eventlog service. As the EventLog service is disabled and stopped, the .evtx files are no longer used by this service and can be deleted. The new EventLog will be Unavailable until the configuration is reset. \n\n5. Attackers may use the powershell command <code>Remove-EventLog -LogName Security</code> to unregister source of events that are part of Windows (Application, Security…). This command deletes the security EventLog (which also generates EventId 1102) but the new Eventlogs are still recorded until the system is rebooted . After the System is rebooted, the Security log is unregistered and doesn’t log any new Eventlog. However logs generated between the command and the reboot are still available in the .evtx file.\n\nAnalytic 1 - User Activity from Clearing Event Logs\n\n<code> (source=\"*WinEventLog:Security\" EventCode IN (1100, 1102, 1104)) OR (source=\"*WinEventLog:System\" EventCode IN (104))</code>",
	"modified": "2024-03-27T20:26:39.074Z",
	"object_marking_refs": [
		"marking-definition--fa42a846-8d90-4e51-bc29-71d5b4802168"
	],
	"relationship_type": "detects",
	"revoked": false,
	"source_ref": "x-mitre-data-component--e905dad2-00d6-477c-97e8-800427abd0e8",
	"spec_version": "",
	"target_ref": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
	"x_mitre_attack_spec_version": "3.2.0",
	"x_mitre_deprecated": false,
	"x_mitre_modified_by_ref": "identity--c78cb6e5-0c4b-4611-8297-d1b8b55e40b5",
	"x_mitre_version": "0.1"
}
